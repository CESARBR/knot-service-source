# Target: Raspberry and x86
# Similar to RH_TCP. Use unix socket instead of real hw
modules_sources += src/node-unix.c
modules_sources += src/node-tcp.c
modules_sources += src/node-tcp6.c

# Target: x86
# Serial proxy. Using an Arduino acting like a SPI <-> Serial
# proxy this approach allows debugging and developing on
# x86 machines using serial connection to connect to nRF24L01 radio.
modules_sources += src/node-serial.c

# IoT protocol: Meshblu HTTP/REST
modules_sources += src/proto-http.c
modules_cflags += @CURL_CFLAGS@ @JSON_CFLAGS@
modules_ldadd += @CURL_LIBS@ @JSON_LIBS@

if WEBSOCKETS
# IoT protocol: Meshblu Websockets
modules_sources += src/proto-socketio.c
modules_cflags += @WEBSOCKETS_CFLAGS@
modules_ldadd += @WEBSOCKETS_LIBS@
endif
